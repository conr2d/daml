-- Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0


module IDRef where

import Daml.Script

-- ID_REF_TEST_BEGIN
data Bank = Bank with
  party : Party
  address: Text
  telephone : Text
    deriving (Eq, Show)

template Account
  with
    accountant : Party
    owner : Party
    number : Text
    bank : Bank
  where
    signatory accountant

data Cash = Cash with
  currency : Text
  amount : Decimal
    deriving (Eq, Show)

template CashBalance
  with
    accountant : Party
    cash : Cash
    account : ContractId Account
  where
    signatory accountant

id_ref_test = do
  accountant <- allocateParty "Bob"
  owner <- allocateParty "Alice"
  bank_party <- allocateParty "Bank"
  let
    bank = Bank with
      party = bank_party
      address = "High Street"
      telephone = "012 3456 789"
    cash = Cash with
      currency = "USD"
      amount = 100.0

  accountCid <- submit accountant do
     createCmd Account with
      accountant
      owner
      bank
      number = "ABC123"

  balanceCid <- submit accountant do
    createCmd CashBalance with
      accountant
      cash
      account = accountCid

  -- Now the accountant updates the telephone number for the bank on the account
  new_account <- submit accountant do
    createAndExerciseCmd (Helper accountant) (UpdatePhoneNumber accountCid "098 7654 321")

  -- The `account` field on the balance now refers to the archived
  -- contract, so this will fail.
  submitMustFail accountant do
    createAndExerciseCmd (Helper accountant) (FetchBalanceAccount balanceCid)


-- Helper template to call `fetch`.
template Helper
  with
    p : Party
  where
    signatory p
    choice UpdatePhoneNumber : ContractId Account
      with
        cid : ContractId Account
        number : Text
      controller p
      do account <- fetch cid
         archive cid
         create account with
           bank = account.bank with
             telephone = number

    choice FetchBalanceAccount : Account
      with
        cid : ContractId CashBalance
      controller p
      do balance <- fetch cid
         fetch balance.account
-- ID_REF_TEST_END

